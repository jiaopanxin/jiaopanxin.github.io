<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Joken Blog</title>
    <link>https://jiaopanxin.github.io/post/</link>
    <description>Recent content in Posts on Joken Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 11 Jan 2020 18:28:13 +0800</lastBuildDate>
    
	<atom:link href="https://jiaopanxin.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>思维导图</title>
      <link>https://jiaopanxin.github.io/post/%E5%8D%9A%E5%AE%A2/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</link>
      <pubDate>Sat, 11 Jan 2020 18:28:13 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E5%8D%9A%E5%AE%A2/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</guid>
      <description>[](/static/blog/1.png)</description>
    </item>
    
    <item>
      <title>Nginx_13_nginx高并发下的优化</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_13_nginx%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 28 Dec 2019 09:27:26 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_13_nginx%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>写在前面 最近在进行服务器的优化，正好在看nginx相关的知识，所以把一些知识整理一下。参考资料为《Nginx高性能web服务器详解》，建议大</description>
    </item>
    
    <item>
      <title>Nginx_12_nginx平滑升级</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_12_nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</link>
      <pubDate>Thu, 26 Dec 2019 16:28:12 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_12_nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</guid>
      <description>Nginx平滑升级 查看当前 Nginx 编译参数 1 2 3 4 5 6 # /usr/local/nginx/sbin/nginx -V nginx version: nginx/1.15.8 built by gcc 4.8.5 20150623 (Red Hat 4.8.5-5) (GCC) built with OpenSSL 1.1.1a 20 Nov 2018 TLS SNI support enabled configure arguments: --user=www --group=www --prefix=/usr/local/nginx 升级nginx 下载新版Ngin</description>
    </item>
    
    <item>
      <title>Nginx_11_nginx监控</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_11_nginx%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Thu, 26 Dec 2019 16:27:19 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_11_nginx%E7%9B%91%E6%8E%A7/</guid>
      <description>第十一章 Nginx 监控 1 2 3 一个服务健康与否，与运维人员息息相关。当一个服务出现问题时，运维人员如何在第一时间感知并恢复业务呢？ 此时相应的监控、告警</description>
    </item>
    
    <item>
      <title>Nginx_10_nginx中的已定义变量</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_10_nginx%E4%B8%AD%E7%9A%84%E5%B7%B2%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/</link>
      <pubDate>Thu, 26 Dec 2019 16:26:42 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_10_nginx%E4%B8%AD%E7%9A%84%E5%B7%B2%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/</guid>
      <description>第十章 Nginx 中的已定义变量 有哪些已定义的变量 1 2 3 4 Nginx 本身提供了很多变量，这些变量可供我们在日志记录、rewrite规则编写、及更高级的LUA脚</description>
    </item>
    
    <item>
      <title>Nginx_9_nginx安全及流量控制</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_9_nginx%E5%AE%89%E5%85%A8%E5%8F%8A%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Thu, 26 Dec 2019 16:25:30 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_9_nginx%E5%AE%89%E5%85%A8%E5%8F%8A%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</guid>
      <description>第九章 Nginx 的安全及流量控制 HTTPS 协议 1 2 HTTPS 协议，我个人理解其实就是 HTTP 协议 + SSL/TLS 协议。为解决HTTP 协议安全上的易窃听、篡改、冒充 等风险而设计，其核心</description>
    </item>
    
    <item>
      <title>Nginx_8_nginx日志升级个性化</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_8_nginx%E6%97%A5%E5%BF%97%E5%8D%87%E7%BA%A7%E4%B8%AA%E6%80%A7%E5%8C%96/</link>
      <pubDate>Thu, 26 Dec 2019 16:24:42 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_8_nginx%E6%97%A5%E5%BF%97%E5%8D%87%E7%BA%A7%E4%B8%AA%E6%80%A7%E5%8C%96/</guid>
      <description>第八章 Nginx 日志、升级及个性化配置 日志问题 1 2 Nginx 本身有一套友好的记录访问日志功能。但默认的日志格式依然不是很理想，需要运维人员根据自己的运维习惯</description>
    </item>
    
    <item>
      <title>Nginx_7_location祥解</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_7_location%E7%A5%A5%E8%A7%A3/</link>
      <pubDate>Thu, 26 Dec 2019 16:24:02 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_7_location%E7%A5%A5%E8%A7%A3/</guid>
      <description>第七章 Nginx Location 详解 location 指令 1 2 3 4 5 6 7 8 9 location 指令可用在虚拟主机server 中， 意味着提供来自客户端的URI或者内部重定向的访问。语法如下: location [modifier] uri</description>
    </item>
    
    <item>
      <title>Nginx_6_rewrite指令</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_6_rewrite%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Thu, 26 Dec 2019 16:23:04 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_6_rewrite%E6%8C%87%E4%BB%A4/</guid>
      <description>第六章 Nginx rewrite指令集详解 1 2 3 Rewrite 是Nginx提供的一个重要基本功能，其在Web服务器产品中几乎是必备的功能，用于实现URL的重写。 U</description>
    </item>
    
    <item>
      <title>Nginx_5_nginx动静分离</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_5_nginx%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/</link>
      <pubDate>Thu, 26 Dec 2019 16:21:56 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_5_nginx%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB/</guid>
      <description>第五章 Nginx 静态资源及动静分离 静态资源缓存 1 2 静态资源缓存问题，这里我们分别从客户端缓存及服务器端缓存两个场景去分析。 1、客户端静态资源缓存 1 2</description>
    </item>
    
    <item>
      <title>Nginx_4_反向代理及负载均衡</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_4_%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8F%8A%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
      <pubDate>Thu, 26 Dec 2019 16:20:56 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_4_%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%8F%8A%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
      <description>第四章 Nginx 反向代理及负载均衡 1 2 代理（Proxy）也称网络代理。它是一种特殊的网络服务，允许一个网络终端（一般为客户端）通过这个服务与另一个网</description>
    </item>
    
    <item>
      <title>Nginx_3_nginx虚拟主机</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_3_nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</link>
      <pubDate>Thu, 26 Dec 2019 16:18:46 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_3_nginx%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</guid>
      <description>第三章 Nginx 虚拟主机 虚拟主机定义 1 2 虚拟主机指的是在单一机器上运行多个网站（例如 company1.qfedu.com 和 company2.qfedu.com）。虚拟主机可以是&amp;#3</description>
    </item>
    
    <item>
      <title>Nginx_2_nginx配置</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_2_nginx%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 26 Dec 2019 16:17:45 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_2_nginx%E9%85%8D%E7%BD%AE/</guid>
      <description>第二章 Nginx 配置 配置文件结构 我们从一份简单的Nginx 配置入手，去了解Nginx 配置文件的结构 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description>
    </item>
    
    <item>
      <title>Nginx_1_nginx初探</title>
      <link>https://jiaopanxin.github.io/post/nginx/nginx_1_nginx%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Thu, 26 Dec 2019 16:17:15 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/nginx/nginx_1_nginx%E5%88%9D%E6%8E%A2/</guid>
      <description>第一章 Nginx 初探 特性介绍 Nginx 提供基本HTTP服务，可以作为HTTP 代理服务器和反向代理服务器，支持通过缓存加速访问，可以完成简单的负载均衡和容错，</description>
    </item>
    
    <item>
      <title>ELKB_6_kafka概念</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_6_kafka%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Thu, 26 Dec 2019 12:14:30 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_6_kafka%E6%A6%82%E5%BF%B5/</guid>
      <description>发布-订阅模型 通过发布-订阅模型，各个子模块之间做到解耦。各个子模块只需要知道自己需要往中间件——Kafka 里取值还是存值即可。简单的抽象模</description>
    </item>
    
    <item>
      <title>ELKB_5_ELKB慢日志报警</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_5_elkb%E6%85%A2%E6%97%A5%E5%BF%97%E6%8A%A5%E8%AD%A6/</link>
      <pubDate>Thu, 26 Dec 2019 12:13:31 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_5_elkb%E6%85%A2%E6%97%A5%E5%BF%97%E6%8A%A5%E8%AD%A6/</guid>
      <description>关于ELK 对 mysql slow 慢日志报警 说下弄这个报警起因，之前一直想做这个事情，但是一直没时间就一拖再拖。终于出了一次事故。开发人员疏忽，使用全表查询语</description>
    </item>
    
    <item>
      <title>ELKB_4_filebeat多文件多索引</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_4_filebeat%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Thu, 26 Dec 2019 12:12:38 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_4_filebeat%E5%A4%9A%E6%96%87%E4%BB%B6%E5%A4%9A%E7%B4%A2%E5%BC%95/</guid>
      <description>filebeat field logstash 过滤 需求场景 应用 同一台filebeat agent端 如何区分 不同文件来源》》 输出到logstash 到不同判断， 创建不同索引 原理配置文件f</description>
    </item>
    
    <item>
      <title>ELKB_3_logstash</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_3_logstash/</link>
      <pubDate>Thu, 26 Dec 2019 12:11:12 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_3_logstash/</guid>
      <description>Logstash概述 集中、转换和存储数据 Logstash 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存</description>
    </item>
    
    <item>
      <title>ELKB_2_部署</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_2_%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 26 Dec 2019 12:09:50 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_2_%E9%83%A8%E7%BD%B2/</guid>
      <description>环境要求 注明 ES代表：elasticsearch Centos7 java 1.8 nginx 软件包及版本 | IP | hostname | 软件 | 内存要求 | | &amp;mdash; | &amp;mdash; | &amp;mdash; | &amp;mdash; | | 172.16.249.101 | elk-1 | filebeat、</description>
    </item>
    
    <item>
      <title>ELKB_1_集中式日志管理</title>
      <link>https://jiaopanxin.github.io/post/elkb/elkb_1_%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 26 Dec 2019 12:07:44 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/elkb/elkb_1_%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</guid>
      <description>集中式日志管理 简介 日常工作中会面临很多问题，处理问题时候。怎么解决问题？ 通过工作经验，迅速判断问题出在哪。 通过日志 系统日志：/var/log</description>
    </item>
    
    <item>
      <title>Rabbitmq_2_集群文档</title>
      <link>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rabbitmq_2_%E9%9B%86%E7%BE%A4%E6%96%87%E6%A1%A3/</link>
      <pubDate>Thu, 26 Dec 2019 11:38:00 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rabbitmq_2_%E9%9B%86%E7%BE%A4%E6%96%87%E6%A1%A3/</guid>
      <description>RabbitMQ集群原理与部署 在项目中想要 RabbitMQ 变得更加健壮，就要使得其变成高可用，所以我们要搭建一个 RabbitMQ 集群，这样你可以从任何一台 RabbitMQ 故障中得以幸</description>
    </item>
    
    <item>
      <title>Rabbitmq_1_基本概念</title>
      <link>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rabbitmq_1_%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Thu, 26 Dec 2019 10:49:10 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/rabbitmq_1_%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>RabbitMQ的一些基本概念 MQ 全称为 Message Queue，消息队列（MQ）是一种应用程序对应用程序的通信方法，即我们常说的中间件之一，而 RabbitMQ 则是 MQ 的</description>
    </item>
    
    <item>
      <title>消息队列介绍</title>
      <link>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 26 Dec 2019 10:18:31 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BB%8B%E7%BB%8D/</guid>
      <description>1.什么是消息队列？ 首先，我们来看看什么是消息队列，维基百科里的解释翻译过来如下： 队列提供了一种异步通信协议，这意味着消息的发送者和接收者不</description>
    </item>
    
    <item>
      <title>Ansible_7_ansible_Jinjia2</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_7_ansible_jinja2/</link>
      <pubDate>Wed, 25 Dec 2019 20:16:26 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_7_ansible_jinja2/</guid>
      <description>第 7 章 Ansible Jinja2模板 1 2 3 4 5 目前Nginx的配置文件在所有的服务器上都是相同的,但我希望能根据每一台服务器的性能去定制服务的启动进程。</description>
    </item>
    
    <item>
      <title>Ansible_6_ansible任务控制</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_6_ansible%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Wed, 25 Dec 2019 20:15:22 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_6_ansible%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/</guid>
      <description>第 6 章 Ansible 任务控制 1 2 这里主要来介绍PlayBook中的任务控制，任务控制类似于编程语言中的if ... 、for ... 等逻辑控制语句。这里我们给出一个实</description>
    </item>
    
    <item>
      <title>Ansible_5_ansible变量</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_5_ansible%E5%8F%98%E9%87%8F/</link>
      <pubDate>Wed, 25 Dec 2019 20:14:02 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_5_ansible%E5%8F%98%E9%87%8F/</guid>
      <description>第 5 章 Ansible 变量 1 2 我们在PlayBook一节中，将PlayBook类比成了Linux中的shell。那么它作为一门Ansible特殊的语言，肯</description>
    </item>
    
    <item>
      <title>Ansible_4_playbook剧本</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_4_playbook%E5%89%A7%E6%9C%AC/</link>
      <pubDate>Wed, 25 Dec 2019 20:12:05 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_4_playbook%E5%89%A7%E6%9C%AC/</guid>
      <description>1 2 通过对 AD-HOC 的学习，我们发现 AD-HOC 每次只能在被管理节点上执行简单的命令。而日常工作中，我们往往面临的是一系列的复杂操作，例如我们有可能需要安装软</description>
    </item>
    
    <item>
      <title>Ansible_3_ad_hoc以及模块</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_3_ad_hoc%E4%BB%A5%E5%8F%8A%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Wed, 25 Dec 2019 20:10:28 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_3_ad_hoc%E4%BB%A5%E5%8F%8A%E6%A8%A1%E5%9D%97/</guid>
      <description>第 3 章 Ansible Ad-Hoc 3.1 命令格式 我们在快速入门中执行的Ansible 命令，类似于我们的批处理命令。在Ansible 中统称为Ansible Ad-Hoc。 其</description>
    </item>
    
    <item>
      <title>Ansible_2_ansible资产</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_2_ansible%E8%B5%84%E4%BA%A7/</link>
      <pubDate>Wed, 25 Dec 2019 20:03:21 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_2_ansible%E8%B5%84%E4%BA%A7/</guid>
      <description>第 2 章 Ansible 资产 在快速入门的场景中，我们一共管理了两台服务器。但是在实际场景中，我们要管理的服务器往往要多得多。难道依然要在Ansible 的 -i 参</description>
    </item>
    
    <item>
      <title>Ansible_1_ansible介绍及安装</title>
      <link>https://jiaopanxin.github.io/post/ansible/ansible_1_ansible%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 25 Dec 2019 20:00:54 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ansible/ansible_1_ansible%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/</guid>
      <description>第 1 章 Ansible 介绍及安装 1.1 介绍 Ansible 是一个 IT 自动化工具。它能配置系统、部署软件、编排更复杂的 IT 任务，如连续部署或零停机时间滚动更新。Ansible 用 Python</description>
    </item>
    
    <item>
      <title>Keepalived_1_概念及应用</title>
      <link>https://jiaopanxin.github.io/post/ha/keepalived_1_%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 25 Dec 2019 17:24:28 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/ha/keepalived_1_%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%BA%94%E7%94%A8/</guid>
      <description>介绍 Keepalived的作用是检测服务器状态 如果一台服务器宕机或者出现其他故障导致当前服务器不可用，keepalived就会检测到并将故障</description>
    </item>
    
    <item>
      <title>Openfalcon_架构介绍</title>
      <link>https://jiaopanxin.github.io/post/%E7%9B%91%E6%8E%A7%E4%B9%8Bopenfalcon/openfalcon_1_%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 24 Dec 2019 21:38:48 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E7%9B%91%E6%8E%A7%E4%B9%8Bopenfalcon/openfalcon_1_%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/</guid>
      <description>open-falcon整体架构 下图是open-falcon的整体架构，模块比较多，可以看完整篇文章介绍再回头看这个架构图。 简化版架构图 简化的</description>
    </item>
    
    <item>
      <title>单机部署openfalcon</title>
      <link>https://jiaopanxin.github.io/post/%E7%9B%91%E6%8E%A7%E4%B9%8Bopenfalcon/openfalcon_2_%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Tue, 24 Dec 2019 19:07:47 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E7%9B%91%E6%8E%A7%E4%B9%8Bopenfalcon/openfalcon_2_%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/</guid>
      <description>如果对falcon不了解，建议先对下这篇文章《open-falcon介绍》（http://book.open-falcon.org/zh/i</description>
    </item>
    
    <item>
      <title>初始化脚本</title>
      <link>https://jiaopanxin.github.io/post/%E8%84%9A%E6%9C%AC/%E5%88%9D%E5%A7%8B%E5%8C%96%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Tue, 24 Dec 2019 10:23:32 +0800</pubDate>
      
      <guid>https://jiaopanxin.github.io/post/%E8%84%9A%E6%9C%AC/%E5%88%9D%E5%A7%8B%E5%8C%96%E8%84%9A%E6%9C%AC/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
  </channel>
</rss>